@startuml
title SmartHouse Container Diagram

top to bottom direction

!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml

Person(user, "User", "A user of SmartHouse system, using WEB and Mobile app")

Container(APIGateway, "API Gateway", Kong)

Container_Boundary(SmartHouse, "SmartHouse System") {
  Container(отопление, "сервис отопления", "Java, Spring", "Мониторит температуру в доме, получая, обрабатывая и сохраняя данные с датчиков температуры")
  Container(освещение, "сервис освещения", "Java, Spring", "Мониторит состояние освещения в доме")
  Container(ворота, "сервис управления воротами", "Java, Spring", "Мониторит состояние ворот")
  Container(наблюдение, "сервис видеонаблюдения", "Java, Spring", "мониторит состояние видеокамер, принимает и хранит видео с камер наблюдения")
  Container(дом, "сервис управления домами", "Java, Spring", "управляет домами, регистрирует устройства в них расположенными")
  Container(управление, "сервис управления", "Java, Spring", "управляет устройствами")
  Container(kafka, "Брокер сообщений", "Kafka", "принимает данные телеметрии с устройств и передает их в соответствующие сервисы")
  
}

Container_Boundary(датчики, "модули управления системы умный дом") {
    System_Ext(heatingModule, "Модуль управления отоплением", "Модуль управления отоплением (включает датчик температуры и систему управления оттоплением")
    System_Ext(lightingModule, "Модуль управления освещением", "Модуль управления освещением")
    System_Ext(gateModule, "Модуль управления воротами", "Модуль управления воротами")
    System_Ext(videoModule, "Модуль управления наблюдением", "Модуль управления наблюдением")
}

Rel(user, APIGateway, "запросы от пользователя")
Rel(APIGateway, отопление, "запросы о температуре")
Rel(APIGateway, освещение, "запросы о состоянии освещения")
Rel(APIGateway, ворота, "запросы о состоянии ворот")
Rel(APIGateway, наблюдение, "запросы о состоянии видеоокамер, получение видео")
Rel(APIGateway, дом, "запросы на подключение дома и регистрации управляющих модулей")
Rel(APIGateway, управление, "управляющие запросы на включение/выключение управляющих модулей")
Rel(отопление, kafka, "получение состояния отопления")
Rel(освещение, kafka, "получение состояния освещения")
Rel(ворота, kafka, "получение состояния ворот")
Rel(наблюдение, kafka, "получение состояния камер, видео")
Rel(heatingModule, kafka, "данные о температуре")
Rel(lightingModule, kafka, "данные о освещении")
Rel(gateModule, kafka, "данные о воротах")
Rel(videoModule, kafka, "данные с камер")

Rel(управление, heatingModule, "управление отоплением")
Rel(управление, lightingModule, "управление освещением")
Rel(управление, gateModule, "управление воротами")
Rel(управление, videoModule, "управление видеонаблюдением")

Rel(отопление, управление, "сигнал на включение/отключение отопления при автоматическом поддержании температуры")


@enduml